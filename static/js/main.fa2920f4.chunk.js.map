{"version":3,"sources":["components/Row/Region/Region.module.scss","components/Row/StateRow.module.scss","components/Nav/Nav.module.scss","containers/TableFilter/TableFilter.module.scss","App.module.scss","assets/thread.svg","components/Row/Row.module.scss","assets/download.svg","containers/Table/Table.module.scss","components/Dropdown/Dropdown.module.scss","components/Search/Search.module.scss","components/Row/Region/Region.js","components/Row/Row.js","components/Row/TownshipRow.js","components/Row/DistrictRow.js","components/Row/StateRow.js","containers/Table/Table.js","data/data.js","components/Dropdown/Dropdown.js","components/Search/Search.js","containers/TableFilter/TableFilter.js","store/actions/filterAction.js","store/actions.js","components/Nav/Nav.js","App.js","serviceWorker.js","store/reducers/filterReducer.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","container","icon","name","DIndentation","TIndentation","download","Active","Default","Nav","profile","title","DropdownBox","SearchBox","App","TableContainer","__webpack_require__","p","row","Dropdown","input","Region","props","react_default","a","createElement","className","styles","type","alt","src","thread_svg","download_svg","Row","_props$data","data","forms","voters","updates","children","TownshipRow","townshipData","DistrictRow","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleButtonClicked","setState","prevState","show","state","townships","districtData","Fragment","onClick","length","map","i","Row_TownshipRow","key","Component","StateRow","districts","stateData","Row_DistrictRow","Table","filter","searchType","includes","searchKeyword","Row_StateRow","toUpperCase","_this$props","console","log","connect","search","filterText","filterType","voterss","updatess","toggleDropdown","active","renderOptions","options","option","onFilterChange","_this2","Search","placeholder","onChange","onSearchChange","onSearchClicked","TableFilter","onTypeChangeHandler","onSearchChangeHandler","e","target","value","components_Dropdown_Dropdown","onSearchBtnClicked","dispatch","payload","onSelectedHandler","href","Nav_Nav","containers_TableFilter_TableFilter","containers_Table_Table","Boolean","window","location","hostname","match","initState","inputReducer","arguments","undefined","action","objectSpread","rootReducer","combineReducers","filterReducer","store","createStore","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa2920f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Region_container__3j7dN\",\"icon\":\"Region_icon__32N07\",\"name\":\"Region_name__1_mF-\",\"DIndentation\":\"Region_DIndentation__971lC\",\"TIndentation\":\"Region_TIndentation__1ahF-\",\"download\":\"Region_download__1HCNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Active\":\"StateRow_Active__34sHQ\",\"Default\":\"StateRow_Default__1AG6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__1Ih1o\",\"profile\":\"Nav_profile__ShpCn\",\"title\":\"Nav_title__33s8T\",\"Active\":\"Nav_Active__2dS65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TableFilter_container__1Yl7H\",\"DropdownBox\":\"TableFilter_DropdownBox__1lFg-\",\"SearchBox\":\"TableFilter_SearchBox__1AySS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3kGV8\",\"TableContainer\":\"App_TableContainer__2kXfB\"};","module.exports = __webpack_public_path__ + \"static/media/thread.f2d5de19.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__2lBHt\"};","module.exports = __webpack_public_path__ + \"static/media/download.16572ea0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__3B1L1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropdown\":\"Dropdown_Dropdown__1YEZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__2qiDZ\"};","import React from 'react'\nimport styles from './Region.module.scss'\nimport thread_svg from '../../../assets/thread.svg'\nimport download_svg from '../../../assets/download.svg'\n\n// dynamically generate region name + region icon + download button (and indentation)\nexport default function Region(props) {\n  // Title.js also uses Region as its components, however it does not have a type attribute and download button\n  return (\n    <span className={styles.container}>\n      {props.type === 'D' && <img className={styles.DIndentation} alt='thread' src={thread_svg}></img>}\n      {props.type === 'T' && <img className={styles.TIndentation} alt='thread' src={thread_svg}></img>}\n      {props.type && <span className={styles.icon}>{props.type}</span>}\n      <span className={styles.name}>{props.name}</span>\n      {props.type && <div className={styles.download}> <img alt='download' src={download_svg}></img></div>}\n    </span>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Row.module.scss'\nimport Region from './Region/Region';\n\n\nexport default function Row(props) {\n  const {name, input, forms, voters, updates} = props.data\n  return (\n    <tr className={styles.row}>\n      <td>\n        <Region name={name} type={props.type}/>\n        {props.children}\n      </td>\n      <td>{input}</td>\n      <td>{forms}</td>\n      <td>{voters}</td>\n      <td>{updates}</td>\n    </tr>\n    \n  )\n}\n\nRow.propTypes = {\n  data: PropTypes.object.isRequired\n}","import React from 'react'\nimport Row from './Row';\nimport PropTypes from 'prop-types'\n\n\nfunction TownshipRow(props) {\n  return (\n    <Row type='T' data={props.townshipData} />\n  )\n}\n\nTownshipRow.propTypes = {\n\ttownshipData: PropTypes.object.isRequired\n}\n\nexport default TownshipRow\n\n","import React, { Component } from 'react'\nimport Row from './Row'\nimport TownshipRow from './TownshipRow';\nimport PropTypes from 'prop-types';\nimport styles from './StateRow.module.scss'; // only use its Active Default classes\n\nclass DistrictRow extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { show: false }\n\t}\n\n\thandleButtonClicked = () => {\n\t\tthis.setState((prevState) => ({show: !prevState.show}))\n\t}\n\n\trender() {\n\t\tconst {townships} = this.props.districtData\n\t\tconst { show } = this.state\n    \n    // this renders a single district-level row \n\t\t// and optionally rendering its township-level childrens\n\t\t// &nbsp; is space in HTML entities\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Row type='D' data={this.props.districtData}>\n\t\t\t\t\t<button \n\t\t\t\t\t\tclassName={show ? styles.Active : styles.Default} \n\t\t\t\t\t\tonClick={this.handleButtonClicked}>{townships.length} Townships &nbsp;\n\t\t\t\t\t\t{show || townships.length === 0 ? <i className=\"fas fa-minus\"></i> : <i className=\"fas fa-plus\"></i> }</button>\n\t\t\t\t</Row>\n\t\t\t\t{show && townships.map(i => <TownshipRow key={i.name} townshipData={i} />) }\n\t\t\t</React.Fragment>\n  \t)\n\t}\n}\n\nDistrictRow.propTypes = {\n\tdistrictData: PropTypes.object.isRequired\n}\n\n\nexport default DistrictRow","import React, { Component } from 'react'\nimport Row from './Row'\nimport DistrictRow from './DistrictRow'\nimport PropTypes from 'prop-types'\nimport styles from './StateRow.module.scss';\n\nclass StateRow extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { show: false }\n\t}\n\n\thandleButtonClicked = () => {\n\t\tthis.setState((prevState) => ({show: !prevState.show}))\n\t}\n\n\trender() {\n\t\tconst {districts} = this.props.stateData\n\t\tconst { show } = this.state\n\t\t\n\t\t// this renders a single state-level row \n\t\t// and optionally rendering its district-level childrens\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Row type='S' data={this.props.stateData}>\n\t\t\t\t\t<button \n\t\t\t\t\t\tclassName={show ? styles.Active : styles.Default} \n\t\t\t\t\t\tonClick={this.handleButtonClicked}>{districts.length} Districts &nbsp;\n\t\t\t\t\t\t{show || districts.length === 0 ? <i className=\"fas fa-minus\"></i> : <i className=\"fas fa-plus\"></i> }\n\t\t\t\t\t</button>\n\t\t\t\t</Row>\n\t\t\t\t{show && districts.map(i => <DistrictRow key={i.name} districtData={i} />) }\n\t\t\t</React.Fragment>\n  \t)\n\t}\n}\n\nStateRow.propTypes = {\n\tstateData: PropTypes.object.isRequired\n}\n\nexport default StateRow","import React, { Component } from 'react'\nimport StateRow from '../../components/Row/StateRow';\nimport { connect } from 'react-redux';\nimport Row from '../../components/Row/Row';\nimport styles from './Table.module.scss';\n\nclass Table extends Component {\n\n  // optionally render rows based on keywords and searchType\n  filter = () => {\n    return this.props.data.map(i => {\n      switch(this.props.searchType) {\n        case 'Last input':\n          return i.input.includes(this.props.searchKeyword) && <StateRow key={i.name} stateData={i}/>\n        case 'Number of forms':\n          return i.forms.includes(this.props.searchKeyword) && <StateRow key={i.name} stateData={i}/>\n        case 'Number of voters':\n          return i.voters.includes(this.props.searchKeyword) && <StateRow key={i.name} stateData={i}/>\n        case 'Updates':\n          return i.updates.includes(this.props.searchKeyword) && <StateRow key={i.name} stateData={i}/>\n        default:\n          return i.name.toUpperCase().includes(this.props.searchKeyword.toUpperCase()) && <StateRow key={i.name} stateData={i}/>\n      }\n    })\n  }\n\n\n  render() {\n    const { searchKeyword, searchType } = this.props\n    console.log(searchKeyword, searchType)\n    const tableAttributes = {\n      name: 'Region', \n      input: 'Last input', \n      forms: 'Number of forms',\n      voters: 'Number of voters',\n      updates: 'Updates'\n    }\n    return (\n      <React.Fragment>\n        <table className={styles.container}>\n          <thead>\n            <Row data={tableAttributes}/>\n          </thead>\n          <tbody>\n            {this.filter()}\n          </tbody>\n        </table>\n      </React.Fragment>\n    )\n  }\n}\n\n// searchKeyword is the search text user entered\nconst mapStatesToProps = state => {\n  console.log(state);\n  return {\n    searchKeyword: state.search.filterText,\n    searchType: state.search.filterType\n  }\n}\n\nexport default connect(mapStatesToProps)(Table)","export const data = [\n    // state level\n    {\n        name: 'Shan state 1',\n        input: '213.3',\n        forms: '123',\n        voters: '234',\n        updates: '234',\n        districts: [\n            // district level\n            {\n                name: 'Shan district 1.1',\n                input: '213.3',\n                forms: '123',\n                voters: '234',\n                updates: '234',\n                townships: [\n                    // township level\n                    {\n                        name: 'Shan township 1.1.1',\n                        input: '213.3',\n                        forms: '123',\n                        voters: '234',\n                        updates: '234',\n                    }\n                ]\n            },\n            {\n                name: 'Shan district 1.2',\n                input: '213.3',\n                forms: '123',\n                voters: '234',\n                updates: '234',\n                townships: []\n            }\n        ]\n    },\n\n\n    {\n        name: 'Shan state 2',\n        input: '2.3',\n        forms: '12356',\n        voters: '24',\n        updates: '256734',\n        districts: [\n            // district level\n            {\n                name: 'Shan district 2.1',\n                input: '213.3',\n                forms: '123',\n                voters: '234',\n                updates: '234',\n                townships: [\n                    // township level\n                    {\n                        name: 'Shan township 2.1.1',\n                        input: '213.3',\n                        forms: '123',\n                        voters: '234',\n                        updates: '234',\n                    },\n                    {\n                        name: 'Shan township 2.1.2',\n                        input: '213.3',\n                        forms: '123',\n                        voters: '234',\n                        updates: '234',\n                    }\n                ]\n            },\n            {\n                name: 'Shan district 2.2',\n                input: '213.3',\n                forms: '123',\n                voters: '234',\n                updates: '234',\n                townships: []\n            },\n            {\n                name: 'Shan district 2.3',\n                input: '213.3',\n                forms: '123',\n                voters: '234',\n                updates: '234',\n                townships: [\n                    {\n                        name: 'Shan township 2.3.1',\n                        input: '213.3',\n                        forms: '123',\n                        voters: '234',\n                        updates: '234',\n                    },\n                    {\n                        name: 'Shan township 2.3.2',\n                        input: '213.3',\n                        forms: '123',\n                        voterss: '234',\n                        updatess: '234',\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        name: 'Shan state 3',\n        input: '21.3',\n        forms: '465',\n        voters: '678',\n        updates: '4',\n        districts: []\n    }\n\n]","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Dropdown.module.scss'\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    };\n  }\n  \n  toggleDropdown = () => {\n    this.setState({\n      active: !this.state.active\n    });\n  }\n  \n  // render dropdown options: filter types\n  renderOptions = () => {\n    if (!this.props.options || !this.state.active)  {\n      return;\n    }\n    \n    return this.props.options.map((option, i) => {   \n      return (\n        <li \n          onClick={() => {this.props.onFilterChange(i); this.setState({active: false})}} \n          key={i} \n          // className={\"dropdown__list-item \" + (i === this.state.selected ? 'dropdown__list-item--active' : '')}\n        >\n          {option}\n        </li>\n      );  \n    });  \n  }\n  \n  render() {\n    // dropdown div\n    return (\n      <div className={styles.Dropdown}>\n        <div\n          onClick={() => this.toggleDropdown()}\n        >\n          {this.props.title !== '' ? this.props.title : 'Filter'}\n        </div>\n        <i onClick={() => this.toggleDropdown()} className=\"fas fa-caret-down\"></i>\n        <ul>{this.renderOptions()}</ul>      \n      </div>\n    );\n  }\n}\n\nDropdown.propTypes = {\n  title: PropTypes.string,\n  options: PropTypes.array \n};\n\nexport default Dropdown\n","import React from 'react'\nimport styles from './Search.module.scss';\nimport PropTypes from 'prop-types'\n\nexport default function Search(props) {\n  // onSearchClicked() triggers the redux state of user entered text and selected type if applicable\n  return (\n    <React.Fragment>\n      <input type='text' className={styles.input} placeholder='Search' onChange={props.onSearchChange}/>\n      <i className=\"fas fa-search\" onClick={props.onSearchClicked}></i>\n    </React.Fragment>\n  )\n}\n\n\nSearch.propTypes = {\n  onSearchChange: PropTypes.func.isRequired, // update the value of input fields\n  onSearchClicked: PropTypes.func.isRequired\n}\n\n\n","import React, { Component } from 'react'\nimport Dropdown from '../../components/Dropdown/Dropdown'\nimport Search from '../../components/Search/Search';\nimport styles from './TableFilter.module.scss'\nimport { connect } from 'react-redux';\nimport { onSearchBtnClicked } from '../../store/actions/filterAction'\n\n// dropdown options\nconst options = ['Region', 'Last input', 'Number of forms', 'Number of voters', 'Updates'];\n\nclass TableFilter extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      filterType: '',\n      filterText: ''\n    }\n  }\n\n  onTypeChangeHandler = (i) => {\n    this.setState({filterType: options[i]})\n    console.log(options[i])\n  }\n  onSearchChangeHandler = (e) => {\n    this.setState({filterText: e.target.value})\n  }\n\n  \n  render() {\n    console.log(this.state.filterText)\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.DropdownBox}>\n          <Dropdown  title={this.state.filterType} options={options} onFilterChange={this.onTypeChangeHandler} />\n        </div>\n        <div className={styles.SearchBox}>\n          <Search onSearchChange={this.onSearchChangeHandler} onSearchClicked={() => this.props.onSearchBtnClicked(this.state)}/>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // this triggers update redux state of the filterText\n    onSearchBtnClicked: (value) => dispatch(onSearchBtnClicked(value))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(TableFilter)","import { SEARCH_UPDATE} from '../actions'\n\nexport const onSearchBtnClicked = (input) => {\n  return ({\n    type: SEARCH_UPDATE,\n    payload: input\n  })\n}\n","export const SEARCH_UPDATE = 'SEARCH_UPDATE'","import React, { Component } from 'react'\nimport styles from './Nav.module.scss'\n\nexport default class Nav extends Component {\n  state = {\n    active: 'overall'\n  }\n\n  onSelectedHandler = (e) => {\n    this.setState({active: e.target.name})\n  }\n\n  render() {\n    return (\n    <div className={styles.Nav}>\n      <div className={styles.profile}>\n        <div>XY</div>\n      </div>\n      <div className={styles.title}>Reports</div>\n      <a href='#/' className={this.state.active === 'overall' ? styles.Active : ''} name='overall' onClick={this.onSelectedHandler}>Overall</a>\n      <a href='#/' className={this.state.active === 'specific' ? styles.Active : ''} name='specific' onClick={this.onSelectedHandler}>Specific</a>\n    </div>\n  )\n  }\n  \n}\n","import React, { Component } from 'react';\nimport styles from './App.module.scss';\nimport Table from './containers/Table/Table';\nimport { data } from './data/data'\nimport TableFilter from './containers/TableFilter/TableFilter';\nimport Nav from './components/Nav/Nav';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.App}>\n        <Nav />\n        <div className={styles.TableContainer}>\n          <TableFilter />\n          <Table data={data} />\n        </div>\n        \n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SEARCH_UPDATE } from '../actions'\nconst initState = {filterText: '', filterType: ''};\n\nconst inputReducer = (state = initState, action) => {\n  switch(action.type) {\n    case SEARCH_UPDATE:\n      return {\n        ...state,\n        filterText: action.payload.filterText,\n        filterType: action.payload.filterType\n      }\n    default:\n      return state\n  }\n}\n\nexport default inputReducer","import { combineReducers } from 'redux';\nimport filterReducer from './filterReducer'\n\nconst rootReducer = combineReducers({\n  search: filterReducer\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nconst store = createStore(rootReducer);\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}